{"version":3,"sources":["img/tnoodle_logo.svg","shared_tnoodle-ui/WcaCompetitionJson.js","functions/events.js","shared_tnoodle-ui/events.js","components/rounds_interface/RoundsTable.jsx","components/rounds_interface/Event.jsx","components/rounds_interface/EventsTable.jsx","components/rounds_interface/RoundsInterface.jsx","components/competition_entry/Title.jsx","functions/entryHelper.js","components/competition_entry/Inputs.jsx","components/competition_entry/EntryInterface.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseActivityCode","activityCode","eventId","roundNumber","group","parts","split","shift","forEach","part","firstLetter","rest","substring","parseInt","Error","concat","getDefaultRounds","event","getDefaultRoundSpec","round","scrambleSets","attempts","extras","copies","events","official","id","name","format_ids","can_change_time_limit","is_timed_event","is_fewest_moves","is_multiple_blindfolded","map","extend","byId","_","mapValues","333","222","444","555","666","777","333bf","333fm","333oh","333ft","clock","minx","pyram","skewb","sq1","444bf","555bf","333mbf","magic","mmagic","333mbo","rawEvent","mapKeys","v","k","camelCase","Object","objectSpread","RoundsTable","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","SCRAMBLE_SETS","ATTEMPTS","EXTRAS","COPIES","classToProperty","type","header","handleChange","target","wcaEvent","property","className","value","handleEventChange","getEventRounds","_this2","react_default","a","createElement","title","i","key","j","Array","from","length","min","defaultValue","onChange","Component","Event","MIN","MAX","e","changeRoundNumber","Fragment","max","EventsTable","wcaEvents","tdSize","Math","floor","sqrt","squaredEvents","temp","push","state","row","rounds_interface_Event","eventsSheet","RoundsInterface","reset","rounds","roundsArray","setState","Number","newNumber","thisEvent","defaultRound","pop","onClick","rounds_interface_EventsTable","rounds_interface_RoundsTable","Title","src","require","alt","href","getDefaultCompetitionName","Date","toISOString","Inputs","toogleShowPassword","showPassword","updateCompetitionName","competitionName","setCompetitionName","updatePassword","password","setPassword","placeholder","checked","readOnly","EntryInterface","setCompetitionInfo","competition_entry_Title","competition_entry_Inputs","disabled","info","setRoundsSheet","sheet","App","competition_entry_EntryInterface","rounds_interface_RoundsInterface","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2515cb25.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tnoodle_logo.0147e6d0.svg\";","export function parseActivityCode(activityCode) {\n  let eventId, roundNumber, group;\n  let parts = activityCode.split(\"-\");\n  eventId = parts.shift();\n\n  parts.forEach(part => {\n    let firstLetter = part[0];\n    let rest = part.substring(1);\n    if (firstLetter === \"r\") {\n      roundNumber = parseInt(rest, 10);\n    } else if (firstLetter === \"g\") {\n      group = rest;\n    } else {\n      throw new Error(\n        `Unrecognized activity code part: ${part} of ${activityCode}`\n      );\n    }\n  });\n  return { eventId, roundNumber, group };\n}\n","export const getDefaultRounds = event => {\n  if (event === \"333\") return 1;\n  return 0;\n};\n\n// TODO actually match events\nexport const getDefaultScrambleSets = event => 1;\nexport const getDefaultAttempts = event => 5;\nexport const getDefaultExtras = event => 2;\nexport const getDefaultCopies = event => 1;\n\nexport const getDefaultRoundSpec = (event, round) => {\n  return {\n    round: round + 1,\n    scrambleSets: getDefaultScrambleSets(event),\n    attempts: getDefaultAttempts(event),\n    extras: getDefaultExtras(event),\n    copies: getDefaultCopies(event)\n  };\n};\n","// Copied from https://github.com/thewca/worldcubeassociation.org/blob/master/WcaOnRails/app/javascript/wca/events.js.erb\nimport _ from \"lodash\";\n\nexport default {\n  official: [\n    {\n      id: \"333\",\n      name: \"3x3x3 Cube\",\n      format_ids: [\"a\", \"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"222\",\n      name: \"2x2x2 Cube\",\n      format_ids: [\"a\", \"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"444\",\n      name: \"4x4x4 Cube\",\n      format_ids: [\"a\", \"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"555\",\n      name: \"5x5x5 Cube\",\n      format_ids: [\"a\", \"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"666\",\n      name: \"6x6x6 Cube\",\n      format_ids: [\"m\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"777\",\n      name: \"7x7x7 Cube\",\n      format_ids: [\"m\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"333bf\",\n      name: \"3x3x3 Blindfolded\",\n      format_ids: [\"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"333fm\",\n      name: \"3x3x3 Fewest Moves\",\n      format_ids: [\"m\", \"2\", \"1\"],\n      can_change_time_limit: false,\n      is_timed_event: false,\n      is_fewest_moves: true,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"333oh\",\n      name: \"3x3x3 One-Handed\",\n      format_ids: [\"a\", \"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"333ft\",\n      name: \"3x3x3 With Feet\",\n      format_ids: [\"m\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"clock\",\n      name: \"Clock\",\n      format_ids: [\"a\", \"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"minx\",\n      name: \"Megaminx\",\n      format_ids: [\"a\", \"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"pyram\",\n      name: \"Pyraminx\",\n      format_ids: [\"a\", \"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"skewb\",\n      name: \"Skewb\",\n      format_ids: [\"a\", \"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"sq1\",\n      name: \"Square-1\",\n      format_ids: [\"a\", \"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"444bf\",\n      name: \"4x4x4 Blindfolded\",\n      format_ids: [\"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"555bf\",\n      name: \"5x5x5 Blindfolded\",\n      format_ids: [\"3\", \"2\", \"1\"],\n      can_change_time_limit: true,\n      is_timed_event: true,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: false\n    },\n    {\n      id: \"333mbf\",\n      name: \"3x3x3 Multi-Blind\",\n      format_ids: [\"3\", \"2\", \"1\"],\n      can_change_time_limit: false,\n      is_timed_event: false,\n      is_fewest_moves: false,\n      is_multiple_blindfolded: true\n    }\n  ].map(extend),\n  byId: _.mapValues(\n    {\n      \"333\": {\n        id: \"333\",\n        name: \"3x3x3 Cube\",\n        format_ids: [\"a\", \"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"222\": {\n        id: \"222\",\n        name: \"2x2x2 Cube\",\n        format_ids: [\"a\", \"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"444\": {\n        id: \"444\",\n        name: \"4x4x4 Cube\",\n        format_ids: [\"a\", \"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"555\": {\n        id: \"555\",\n        name: \"5x5x5 Cube\",\n        format_ids: [\"a\", \"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"666\": {\n        id: \"666\",\n        name: \"6x6x6 Cube\",\n        format_ids: [\"m\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"777\": {\n        id: \"777\",\n        name: \"7x7x7 Cube\",\n        format_ids: [\"m\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"333bf\": {\n        id: \"333bf\",\n        name: \"3x3x3 Blindfolded\",\n        format_ids: [\"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"333fm\": {\n        id: \"333fm\",\n        name: \"3x3x3 Fewest Moves\",\n        format_ids: [\"m\", \"2\", \"1\"],\n        can_change_time_limit: false,\n        is_timed_event: false,\n        is_fewest_moves: true,\n        is_multiple_blindfolded: false\n      },\n      \"333oh\": {\n        id: \"333oh\",\n        name: \"3x3x3 One-Handed\",\n        format_ids: [\"a\", \"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"333ft\": {\n        id: \"333ft\",\n        name: \"3x3x3 With Feet\",\n        format_ids: [\"m\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      clock: {\n        id: \"clock\",\n        name: \"Clock\",\n        format_ids: [\"a\", \"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      minx: {\n        id: \"minx\",\n        name: \"Megaminx\",\n        format_ids: [\"a\", \"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      pyram: {\n        id: \"pyram\",\n        name: \"Pyraminx\",\n        format_ids: [\"a\", \"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      skewb: {\n        id: \"skewb\",\n        name: \"Skewb\",\n        format_ids: [\"a\", \"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      sq1: {\n        id: \"sq1\",\n        name: \"Square-1\",\n        format_ids: [\"a\", \"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"444bf\": {\n        id: \"444bf\",\n        name: \"4x4x4 Blindfolded\",\n        format_ids: [\"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"555bf\": {\n        id: \"555bf\",\n        name: \"5x5x5 Blindfolded\",\n        format_ids: [\"3\", \"2\", \"1\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"333mbf\": {\n        id: \"333mbf\",\n        name: \"3x3x3 Multi-Blind\",\n        format_ids: [\"3\", \"2\", \"1\"],\n        can_change_time_limit: false,\n        is_timed_event: false,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: true\n      },\n      magic: {\n        id: \"magic\",\n        name: \"Magic\",\n        format_ids: [\"a\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      mmagic: {\n        id: \"mmagic\",\n        name: \"Master Magic\",\n        format_ids: [\"a\"],\n        can_change_time_limit: true,\n        is_timed_event: true,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: false\n      },\n      \"333mbo\": {\n        id: \"333mbo\",\n        name: \"3x3x3 Multi-Blind Old Style\",\n        format_ids: [\"3\", \"2\", \"1\"],\n        can_change_time_limit: false,\n        is_timed_event: false,\n        is_fewest_moves: false,\n        is_multiple_blindfolded: true\n      }\n    },\n    extend\n  )\n};\n\nfunction extend(rawEvent) {\n  rawEvent = _.mapKeys(rawEvent, (v, k) => _.camelCase(k));\n  return {\n    ...rawEvent\n  };\n}\n","import React, { Component } from \"react\";\nimport { parseActivityCode } from \"../../shared_tnoodle-ui/WcaCompetitionJson\";\nimport {\n  getDefaultScrambleSets,\n  getDefaultAttempts,\n  getDefaultExtras,\n  getDefaultCopies\n} from \"../../functions/events\";\nimport official from \"../../shared_tnoodle-ui/events\";\n\nclass RoundsTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getEventRounds = props.getEventRounds;\n    this.handleEventChange = props.handleEventChange;\n  }\n\n  SCRAMBLE_SETS = \"num_scramble_sets\";\n  ATTEMPTS = \"num_solves\";\n  EXTRAS = \"num_extra_solves\";\n  COPIES = \"num_copies\";\n\n  // Method for mapping class to properties on the interface state.\n  classToProperty = type => {\n    if (type === this.SCRAMBLE_SETS) {\n      return \"scrambleSets\";\n    }\n    if (type === this.ATTEMPTS) {\n      return \"attempts\";\n    }\n    if (type === this.EXTRAS) {\n      return \"extras\";\n    }\n    if (type === this.COPIES) {\n      return \"copies\";\n    }\n  };\n\n  header = [\n    \"Event\",\n    \"Round Names\",\n    \"# Scramble Sets\",\n    \"# Attempts\",\n    \"# Extra Scrambles\",\n    \"# Copies\"\n  ];\n\n  handleChange = event => {\n    let activityCode = event.target.id;\n    let wcaEvent = parseActivityCode(activityCode).eventId;\n    let round = parseActivityCode(activityCode).roundNumber - 1; // round 1 is in the 0 index\n\n    let property = this.classToProperty(event.target.className);\n    let value = event.target.value;\n\n    this.handleEventChange(wcaEvent, round, property, value);\n  };\n\n  render() {\n    let MIN_SCRAMBLE_SETS = 1;\n    let MIN_ATTEMPTS = 1;\n    let MIN_EXTRAS = 0;\n    let MIN_COPIES = 1;\n    return (\n      <table id=\"rounds_table\">\n        <thead>\n          <tr>\n            {this.header.map((title, i) => (\n              <td key={title}>{title}</td>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {official.official.map((wcaEvent, j) =>\n            Array.from(\n              { length: this.getEventRounds(wcaEvent.id) },\n              (_, round) => (\n                <tr key={wcaEvent.id + round}>\n                  <td className=\"event_name\">{wcaEvent.name}</td>\n                  <td className=\"event_name\">Round {round + 1}</td>\n                  <td>\n                    <input\n                      id={wcaEvent.id + \"-r\" + (round + 1)}\n                      className={this.SCRAMBLE_SETS}\n                      type=\"number\"\n                      min={MIN_SCRAMBLE_SETS}\n                      defaultValue={getDefaultScrambleSets(wcaEvent.id)}\n                      onChange={this.handleChange}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      id={wcaEvent.id + \"-r\" + (round + 1)}\n                      className={this.ATTEMPTS}\n                      type=\"number\"\n                      min={MIN_ATTEMPTS}\n                      defaultValue={getDefaultAttempts(wcaEvent.id)}\n                      onChange={this.handleChange}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      id={wcaEvent.id + \"-r\" + (round + 1)}\n                      className={this.EXTRAS}\n                      type=\"number\"\n                      min={MIN_EXTRAS}\n                      defaultValue={getDefaultExtras(wcaEvent.id)}\n                      onChange={this.handleChange}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      id={wcaEvent.id + \"-r\" + (round + 1)} // This id is WCIF activityCode like.\n                      className={this.COPIES}\n                      type=\"number\"\n                      min={MIN_COPIES}\n                      defaultValue={getDefaultCopies(wcaEvent.id)}\n                      onChange={this.handleChange}\n                    />\n                  </td>\n                </tr>\n              )\n            )\n          )}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default RoundsTable;\n","import React, { Component } from \"react\";\n\nclass Event extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeRoundNumber = props.changeRoundNumber;\n    this.wcaEvent = props.wcaEvent;\n  }\n\n  MIN = 0;\n  MAX = 100;\n  // Hopefully, 100 is enough to prevent delegate mistakes,\n  // but allow people trying TNoodle to play around with a lot of rounds.\n\n  handleEventChange = e => {\n    this.changeRoundNumber(this.wcaEvent, e.target.value);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <td className=\"event_amount_label\">{this.wcaEvent}:</td>\n        <td className=\"event_amount_value_td\">\n          <input\n            id={\"event_amount_value_\" + this.wcaEvent}\n            type=\"number\"\n            min={this.MIN}\n            max={this.MAX}\n            className=\"event_amount_value\"\n            onChange={this.handleEventChange}\n            value={this.props.value}\n          />\n        </td>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\nimport official from \"../../shared_tnoodle-ui/events\";\n\nclass EventsTable extends Component {\n  constructor(props) {\n    super(props);\n    this.changeRoundNumber = props.changeRoundNumber;\n\n    let wcaEvents = official.official;\n\n    // Display the table in a size almost squared way,\n    // but keep the previous pattern.\n    let tdSize = Math.floor(Math.sqrt(wcaEvents.length)) + 1;\n    let squaredEvents = [];\n    let temp = [];\n    for (var i = 0; i < wcaEvents.length; i++) {\n      if (i % tdSize === 0) {\n        squaredEvents.push(temp);\n        temp = [];\n      }\n      temp.push(wcaEvents[i].id);\n    }\n    if (temp.length > 0) {\n      squaredEvents.push(temp);\n    }\n\n    this.state = {\n      squaredEvents: squaredEvents,\n      tdSize: tdSize\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <table id=\"events_table\">\n          <tbody>\n            {this.state.squaredEvents.map((row, i) => (\n              <tr key={i}>\n                {row.map((wcaEvent, j) => (\n                  <Event\n                    key={j}\n                    wcaEvent={wcaEvent}\n                    changeRoundNumber={this.changeRoundNumber}\n                    value={this.props.eventsSheet[wcaEvent].length}\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default EventsTable;\n","import React, { Component } from \"react\";\nimport RoundsTable from \"./RoundsTable\";\nimport EventsTable from \"./EventsTable\";\nimport official from \"../../shared_tnoodle-ui/events\";\nimport { getDefaultRounds, getDefaultRoundSpec } from \"../../functions/events\";\n\nclass RoundsInterface extends Component {\n  // Prevents strange behavior of rendering before state is ready\n  componentWillMount() {\n    this.reset();\n  }\n\n  reset = () => {\n    let state = {};\n    official.official.forEach(wcaEvent => {\n      let rounds = getDefaultRounds(wcaEvent.id);\n      let roundsArray = [];\n      for (let i = 0; i < rounds; i++) {\n        roundsArray.push(getDefaultRoundSpec(wcaEvent.id, i));\n      }\n      state[wcaEvent.id] = roundsArray;\n    });\n    this.setState(state);\n  };\n\n  handleEventChange = (event, round, property, value) => {\n    let state = this.state;\n    state[event][round][property] = Number(value);\n    this.setState(state);\n  };\n\n  getEventRounds = wcaEvent => {\n    return this.state[wcaEvent].length;\n  };\n\n  changeRoundNumber = (wcaEvent, newNumber) => {\n    let state = this.state;\n    let thisEvent = state[wcaEvent];\n    while (newNumber > thisEvent.length) {\n      let defaultRound = getDefaultRoundSpec(wcaEvent);\n      thisEvent.push(defaultRound);\n    }\n    while (newNumber < thisEvent.length) {\n      thisEvent.pop();\n    }\n    state[wcaEvent] = thisEvent;\n    this.setState(state);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"events_rounds_interface\" className=\"interface\">\n          <div>\n            <button onClick={this.reset} className=\"resetButton\">\n              Reset\n            </button>\n            <h1> Adjust Events:</h1>\n            <EventsTable\n              changeRoundNumber={this.changeRoundNumber}\n              eventsSheet={this.state}\n            />\n          </div>\n\n          <div>\n            <h1>Adjust Individual Rounds:</h1>\n            <RoundsTable\n              getEventRounds={this.getEventRounds}\n              handleEventChange={this.handleEventChange}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RoundsInterface;\n","import React, { Component } from \"react\";\n\nclass Title extends Component {\n  render() {\n    return (\n      <h1 id=\"title\">\n        <img\n          id=\"logo_top\"\n          src={require(\"../../img/tnoodle_logo.svg\")}\n          alt=\"TNoodle logo\"\n        />\n        <span className=\"mark2_title\">\n          <span>\n            <a href=\"/readme\">TNoodle</a> WCA Scrambler\n          </span>\n        </span>\n      </h1>\n    );\n  }\n}\n\nexport default Title;\n","export const getDefaultCompetitionName = () => {\n  let date = new Date();\n  return \"Scrambles for \" + date.toISOString().split(\"T\")[0];\n};\n","import React, { Component } from \"react\";\nimport { getDefaultCompetitionName } from \"../../functions/entryHelper\";\n\nclass Inputs extends Component {\n  constructor(props) {\n    super(props);\n    this.setCompetitionName = props.setCompetitionName;\n    this.setPassword = props.setPassword;\n    this.state = {\n      showPassword: false,\n      password: \"\",\n      competitionName: getDefaultCompetitionName()\n    };\n    props.setCompetitionName(this.state.competitionName);\n  }\n\n  toogleShowPassword = () => {\n    let state = this.state;\n    state.showPassword = !state.showPassword;\n    this.setState(state);\n  };\n\n  updateCompetitionName = event => {\n    let state = this.state;\n    state.competitionName = event.target.value;\n    this.setState(state);\n    this.setCompetitionName(state.competitionName);\n  };\n\n  updatePassword = event => {\n    let state = this.state;\n    state.password = event.target.value;\n    this.setState(state);\n    this.setPassword(state.password);\n  };\n\n  render() {\n    return (\n      <div>\n        <input\n          id=\"competitionName\"\n          placeholder=\"Competition Name\"\n          onChange={this.updateCompetitionName}\n          value={this.state.competitionName}\n        />\n\n        <div>\n          <input\n            id=\"passwordInput\"\n            type={this.state.showPassword ? \"\" : \"password\"}\n            placeholder=\"Password\"\n            onChange={this.updatePassword}\n          />\n        </div>\n        <div onClick={this.toogleShowPassword}>\n          <input\n            id=\"showPassword\"\n            type=\"checkbox\"\n            checked={this.state.showPassword}\n            readOnly\n          />\n          <label>Show password</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Inputs;\n","import React, { Component } from \"react\";\nimport Title from \"./Title\";\nimport Inputs from \"./Inputs\";\n\nclass EntryInterface extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      competitionName: \"\",\n      password: \"\"\n    };\n  }\n\n  setCompetitionName = name => {\n    let state = this.state;\n    state.competitionName = name;\n    this.setState(state);\n    this.props.setCompetitionInfo(state);\n  };\n\n  setPassword = password => {\n    let state = this.state;\n    state.password = password;\n    this.setState(state);\n    this.props.setCompetitionInfo(state);\n  };\n\n  render() {\n    return (\n      <div id=\"top_interface\" className=\"interface\">\n        <Title />\n        <Inputs\n          setCompetitionName={this.setCompetitionName}\n          setPassword={this.setPassword}\n        />\n        <button className=\"scrambleButton\" disabled=\"\">\n          Scramble!\n        </button>\n        <div id=\"helpLinkDiv\">\n          <a href=\"/readme/scramble\">?</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EntryInterface;\n","import React from \"react\";\nimport \"./App.css\";\nimport RoundsInterface from \"./components/rounds_interface/RoundsInterface\";\nimport EntryInterface from \"./components/competition_entry/EntryInterface\";\n\nexport var roundsSheet = {};\nexport var competitionInfo = {};\n\nlet setCompetitionInfo = info => {\n  competitionInfo = info;\n};\n\nlet setRoundsSheet = sheet => {\n  roundsSheet = sheet;\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EntryInterface setCompetitionInfo={setCompetitionInfo} />\n      <RoundsInterface setRoundsSheet={setRoundsSheet} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}